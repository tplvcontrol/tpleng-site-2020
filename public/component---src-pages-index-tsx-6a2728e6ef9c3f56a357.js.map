{"version":3,"sources":["webpack:///./src/components/grid-item.tsx","webpack:///./src/pages/index.tsx"],"names":["GridItem","styled","Link","props","theme","fontSizes","space","breakpoints","Area","animated","div","FirstProject","AboutUs","ThreeProjects","Index","data","firstProject","threeProjects","aboutUs","pageAnimation","instagram","useSpring","config","slow","from","opacity","to","style","slug","aria-label","title","fluid","cover","childImageSharp","nodes","map","project","key","query"],"mappings":"2FAAA,4BAGMA,EAAWC,YAAOC,QAAV,0EAAGD,CAAH,wYAoBG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,UAAU,MACjC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,MAAM,MAGjB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAY,MACvC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,UAAU,MACjC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,MAAM,MAU7BN,O,kCCvCf,uJA6BMQ,EAAOP,YAAOQ,IAASC,KAAnB,iEAAGT,CAAH,o8BAQa,SAACE,GAAD,OAAWA,EAAMC,MAAMG,YAAY,MAWnC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,YAAY,MAYnC,SAACJ,GAAD,OAAWA,EAAMC,MAAMG,YAAY,MAcpDI,EAAeV,YAAOD,KAAV,yEAAGC,CAAH,8BAIZW,EAAUX,YAAOD,KAAV,oEAAGC,CAAH,yBAIPY,EAAgBZ,IAAOS,IAAV,0EAAGT,CAAH,6JAKG,SAACE,GAAD,OAAWA,EAAMC,MAAMG,YAAY,MAMvCN,YAAOD,KAAV,sEAAGC,CAAH,0BAwCAa,UApCmC,SAAC,GAAkE,QAAhEC,KAAQC,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,QACnFC,GAD8G,EAAlBC,UAC5EC,YAAU,CAC/BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,MAGhB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,MACA,kBAACjB,EAAD,CAAMmB,MAAOR,GACZ,kBAACR,EAAD,CAAce,GAAIV,EAAaY,KAAMC,aAAA,iBAA6Bb,EAAac,MAA1C,KACpC,kBAAC,IAAD,CAAKC,MAAOf,EAAagB,MAAMC,gBAAgBF,QAC/C,8BAAOf,EAAac,QAErB,kBAAClB,EAAD,CAASc,GAAG,cAAcG,aAAW,uBACpC,kBAAC,IAAD,CAAKE,MAAOb,EAAQe,gBAAgBF,QACpC,6CAED,kBAAClB,EAAD,KACEI,EAAciB,MAAMC,KAAI,SAACC,GAAD,OACxB,kBAAC,IAAD,CAAUV,GAAIU,EAAQR,KAAMS,IAAKD,EAAQR,KAAMC,aAAA,iBAA6BO,EAAQN,MAArC,KAC9C,kBAAC,IAAD,CAAKC,MAAOK,EAAQJ,MAAMC,gBAAgBF,QAC1C,8BAAOK,EAAQN,eAef,IAAMQ,EAAQ","file":"component---src-pages-index-tsx-6a2728e6ef9c3f56a357.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n\r\nconst GridItem = styled(Link)`\r\n  position: relative;\r\n  > div {\r\n    position: absolute !important;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n  > div img {\r\n    transition: all 0.3s ease 0s !important;\r\n  }\r\n  > span {\r\n    z-index: 10;\r\n    color: white;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    text-align: right;\r\n    font-weight: 700;\r\n    font-size: ${props => props.theme.fontSizes[4]};\r\n    padding: ${props => props.theme.space[6]};\r\n    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\r\n    @media (max-width: ${props => props.theme.breakpoints[3]}) {\r\n      font-size: ${props => props.theme.fontSizes[3]};\r\n      padding: ${props => props.theme.space[5]};\r\n    }\r\n  }\r\n  &:hover {\r\n    > div img {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`\r\n\r\nexport default GridItem\r\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport { animated, useSpring, config } from 'react-spring';\nimport Layout from '../components/layout';\nimport GridItem from '../components/grid-item';\nimport SEO from '../components/SEO';\nimport { ChildImageSharp } from '../types';\n\ntype PageProps = {\n\tdata: {\n\t\tfirstProject: {\n\t\t\ttitle: string;\n\t\t\tslug: string;\n\t\t\tcover: ChildImageSharp;\n\t\t};\n\t\tthreeProjects: {\n\t\t\tnodes: {\n\t\t\t\ttitle: string;\n\t\t\t\tslug: string;\n\t\t\t\tcover: ChildImageSharp;\n\t\t\t}[];\n\t\t};\n\t\taboutUs: ChildImageSharp;\n\t\tinstagram: ChildImageSharp;\n\t};\n};\n\nconst Area = styled(animated.div)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\ngrid-template-rows: 35vw 40vw;\n  grid-template-areas:\n    'first-project about-us about-us'\n    'three-projects three-projects three-projects';\n\n  @media (max-width: ${(props) => props.theme.breakpoints[3]}) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: 35vw 30vw 30vw;\n\n    grid-template-areas:\n      'first-project first-project about-us about-us'\n      'three-projects three-projects three-projects three-projects'\n      'three-projects three-projects three-projects three-projects'\n      'instagram instagram instagram instagram';\n  }\n\n  @media (max-width: ${(props) => props.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(5, 38vw);\n\n    grid-template-areas:\n      'first-project about-us'\n      'three-projects three-projects'\n      'three-projects three-projects'\n      'three-projects three-projects'\n      'instagram instagram';\n  }\n\n  @media (max-width: ${(props) => props.theme.breakpoints[0]}) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(6, 50vw);\n\n    grid-template-areas:\n      'first-project'\n      'about-us'\n      'three-projects'\n      'three-projects'\n      'three-projects'\n      'instagram';\n  }\n`;\n\nconst FirstProject = styled(GridItem)`\n  grid-area: first-project;\n`;\n\nconst AboutUs = styled(GridItem)`\n  grid-area: about-us;\n`;\n\nconst ThreeProjects = styled.div`\n\tgrid-area: three-projects;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\n\t@media (max-width: ${(props) => props.theme.breakpoints[1]}) {\n\t\tgrid-template-columns: 1fr;\n\t\tgrid-template-rows: 1fr 1fr;\n\t}\n`;\n\nconst Instagram = styled(GridItem)`\n  grid-area: instagram;\n`;\n\nconst Index: React.FunctionComponent<PageProps> = ({ data: { firstProject, threeProjects, aboutUs, instagram } }) => {\n\tconst pageAnimation = useSpring({\n\t\tconfig: config.slow,\n\t\tfrom: { opacity: 0 },\n\t\tto: { opacity: 1 }\n\t});\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO />\n\t\t\t<Area style={pageAnimation}>\n\t\t\t\t<FirstProject to={firstProject.slug} aria-label={`View project \"${firstProject.title}\"`}>\n\t\t\t\t\t<Img fluid={firstProject.cover.childImageSharp.fluid} />\n\t\t\t\t\t<span>{firstProject.title}</span>\n\t\t\t\t</FirstProject>\n\t\t\t\t<AboutUs to=\"/quem-somos\" aria-label=\"Visit my about page\">\n\t\t\t\t\t<Img fluid={aboutUs.childImageSharp.fluid} />\n\t\t\t\t\t<span>Quem Somos</span>\n\t\t\t\t</AboutUs>\n\t\t\t\t<ThreeProjects>\n\t\t\t\t\t{threeProjects.nodes.map((project) => (\n\t\t\t\t\t\t<GridItem to={project.slug} key={project.slug} aria-label={`View project \"${project.title}\"`}>\n\t\t\t\t\t\t\t<Img fluid={project.cover.childImageSharp.fluid} />\n\t\t\t\t\t\t\t<span>{project.title}</span>\n\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t))}\n\t\t\t\t</ThreeProjects>\n\t\t\t\t{/*<Instagram to=\"/instagram\" aria-label=\"See my Instagram pictures\">\n\t\t\t\t\t<Img fluid={instagram.childImageSharp.fluid} />\n\t\t\t\t\t<span>Instagram</span>\n          </Instagram> */}\n\t\t\t</Area>\n\t\t</Layout>\n\t);\n};\n\nexport default Index;\n\nexport const query = graphql`\n\tquery Index {\n\t\tfirstProject: projectsYaml {\n\t\t\ttitle\n\t\t\tslug\n\t\t\tcover {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfluid(quality: 95, maxWidth: 1200) {\n\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthreeProjects: allProjectsYaml(limit: 3, skip: 1) {\n\t\t\tnodes {\n\t\t\t\ttitle\n\t\t\t\tslug\n\t\t\t\tcover {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tfluid(quality: 95, maxWidth: 1200) {\n\t\t\t\t\t\t\t...GatsbyImageSharpFluid_withWebp\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\taboutUs: file(sourceInstanceName: { eq: \"images\" }, name: { eq: \"about-us\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(quality: 95, maxWidth: 1200) {\n\t\t\t\t\t...GatsbyImageSharpFluid_withWebp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tinstagram: file(sourceInstanceName: { eq: \"images\" }, name: { eq: \"instagram\" }) {\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(quality: 95, maxWidth: 1920) {\n\t\t\t\t\t...GatsbyImageSharpFluid_withWebp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}